package org.openapitools.model;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.model.AccountRefMVO;
import org.openapitools.model.AgreementRefMVO;
import org.openapitools.model.CharacteristicMVO;
import org.openapitools.model.ContactMediumMVO;
import org.openapitools.model.CreditProfileMVO;
import org.openapitools.model.PartyRefMVO;
import org.openapitools.model.PartyRoleSpecificationRefMVO;
import org.openapitools.model.PaymentMethodRefMVO;
import org.openapitools.model.RelatedPartyOrPartyRoleMVO;
import org.openapitools.model.TimePeriod;
import java.time.OffsetDateTime;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * PartyRoleMVO
 */

@JsonIgnoreProperties(
  value = "@type", // ignore manually set @type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the @type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = BusinessPartnerMVO.class, name = "BusinessPartner"),
  @JsonSubTypes.Type(value = ConsumerMVO.class, name = "Consumer"),
  @JsonSubTypes.Type(value = CustomerMVO.class, name = "Customer"),
  @JsonSubTypes.Type(value = PartyRoleMVO.class, name = "PartyRole"),
  @JsonSubTypes.Type(value = ProducerMVO.class, name = "Producer"),
  @JsonSubTypes.Type(value = SupplierMVO.class, name = "Supplier")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-08-04T19:13:14.807273600+02:00[Europe/Budapest]", comments = "Generator version: 7.4.0")
public class PartyRoleMVO implements PartyOrPartyRoleMVO {

  private String atType;

  private String atBaseType;

  private String atSchemaLocation;

  private String href;

  private String id;

  private String name;

  private String description;

  private String role;

  private PartyRefMVO engagedParty;

  private PartyRoleSpecificationRefMVO partyRoleSpecification;

  @Valid
  private List<CharacteristicMVO> characteristic;

  @Valid
  private List<@Valid AccountRefMVO> account;

  @Valid
  private List<@Valid AgreementRefMVO> agreement;

  @Valid
  private List<ContactMediumMVO> contactMedium;

  @Valid
  private List<@Valid PaymentMethodRefMVO> paymentMethod;

  @Valid
  private List<CreditProfileMVO> creditProfile;

  @Valid
  private List<RelatedPartyOrPartyRoleMVO> relatedParty;

  private String status;

  private String statusReason;

  private TimePeriod validFor;

  public PartyRoleMVO() {
    super();
  }

  /**
   * Constructor with only required parameters
   */
  public PartyRoleMVO(String atType, String name, PartyRefMVO engagedParty) {
    this.atType = atType;
    this.name = name;
    this.engagedParty = engagedParty;
  }

  public PartyRoleMVO atType(String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  */
  @NotNull 
  @Schema(name = "@type", description = "When sub-classing, this defines the sub-class Extensible name", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("@type")
  public String getAtType() {
    return atType;
  }

  public void setAtType(String atType) {
    this.atType = atType;
  }

  public PartyRoleMVO atBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  */
  
  @Schema(name = "@baseType", description = "When sub-classing, this defines the super-class", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("@baseType")
  public String getAtBaseType() {
    return atBaseType;
  }

  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }

  public PartyRoleMVO atSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  */
  
  @Schema(name = "@schemaLocation", description = "A URI to a JSON-Schema file that defines additional attributes and relationships", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("@schemaLocation")
  public String getAtSchemaLocation() {
    return atSchemaLocation;
  }

  public void setAtSchemaLocation(String atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }

  public PartyRoleMVO href(String href) {
    this.href = href;
    return this;
  }

  /**
   * Hyperlink reference
   * @return href
  */
  
  @Schema(name = "href", description = "Hyperlink reference", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("href")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public PartyRoleMVO id(String id) {
    this.id = id;
    return this;
  }

  /**
   * unique identifier
   * @return id
  */
  
  @Schema(name = "id", description = "unique identifier", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PartyRoleMVO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity.
   * @return name
  */
  @NotNull 
  @Schema(name = "name", description = "A word, term, or phrase by which the PartyRole is known and distinguished from other PartyRoles. It's the name of the PartyRole unique entity.", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PartyRoleMVO description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A description of the PartyRole.
   * @return description
  */
  
  @Schema(name = "description", description = "A description of the PartyRole.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PartyRoleMVO role(String role) {
    this.role = role;
    return this;
  }

  /**
   * Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification.
   * @return role
  */
  
  @Schema(name = "role", description = "Role played by the engagedParty in this context. As role is defined by partyRoleSpecification, this role attribute can be used to precise the role defined by partyRoleSpecification, or it can be used to define the role in case there is no partyRoleSpecification.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("role")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public PartyRoleMVO engagedParty(PartyRefMVO engagedParty) {
    this.engagedParty = engagedParty;
    return this;
  }

  /**
   * Get engagedParty
   * @return engagedParty
  */
  @NotNull @Valid 
  @Schema(name = "engagedParty", requiredMode = Schema.RequiredMode.REQUIRED)
  @JsonProperty("engagedParty")
  public PartyRefMVO getEngagedParty() {
    return engagedParty;
  }

  public void setEngagedParty(PartyRefMVO engagedParty) {
    this.engagedParty = engagedParty;
  }

  public PartyRoleMVO partyRoleSpecification(PartyRoleSpecificationRefMVO partyRoleSpecification) {
    this.partyRoleSpecification = partyRoleSpecification;
    return this;
  }

  /**
   * Get partyRoleSpecification
   * @return partyRoleSpecification
  */
  @Valid 
  @Schema(name = "partyRoleSpecification", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("partyRoleSpecification")
  public PartyRoleSpecificationRefMVO getPartyRoleSpecification() {
    return partyRoleSpecification;
  }

  public void setPartyRoleSpecification(PartyRoleSpecificationRefMVO partyRoleSpecification) {
    this.partyRoleSpecification = partyRoleSpecification;
  }

  public PartyRoleMVO characteristic(List<CharacteristicMVO> characteristic) {
    this.characteristic = characteristic;
    return this;
  }

  public PartyRoleMVO addCharacteristicItem(CharacteristicMVO characteristicItem) {
    if (this.characteristic == null) {
      this.characteristic = new ArrayList<>();
    }
    this.characteristic.add(characteristicItem);
    return this;
  }

  /**
   * Describes the characteristic of a party role.
   * @return characteristic
  */
  @Valid 
  @Schema(name = "characteristic", description = "Describes the characteristic of a party role.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("characteristic")
  public List<CharacteristicMVO> getCharacteristic() {
    return characteristic;
  }

  public void setCharacteristic(List<CharacteristicMVO> characteristic) {
    this.characteristic = characteristic;
  }

  public PartyRoleMVO account(List<@Valid AccountRefMVO> account) {
    this.account = account;
    return this;
  }

  public PartyRoleMVO addAccountItem(AccountRefMVO accountItem) {
    if (this.account == null) {
      this.account = new ArrayList<>();
    }
    this.account.add(accountItem);
    return this;
  }

  /**
   * Collection of accounts
   * @return account
  */
  @Valid 
  @Schema(name = "account", description = "Collection of accounts", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("account")
  public List<@Valid AccountRefMVO> getAccount() {
    return account;
  }

  public void setAccount(List<@Valid AccountRefMVO> account) {
    this.account = account;
  }

  public PartyRoleMVO agreement(List<@Valid AgreementRefMVO> agreement) {
    this.agreement = agreement;
    return this;
  }

  public PartyRoleMVO addAgreementItem(AgreementRefMVO agreementItem) {
    if (this.agreement == null) {
      this.agreement = new ArrayList<>();
    }
    this.agreement.add(agreementItem);
    return this;
  }

  /**
   * Collection of agreements
   * @return agreement
  */
  @Valid 
  @Schema(name = "agreement", description = "Collection of agreements", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("agreement")
  public List<@Valid AgreementRefMVO> getAgreement() {
    return agreement;
  }

  public void setAgreement(List<@Valid AgreementRefMVO> agreement) {
    this.agreement = agreement;
  }

  public PartyRoleMVO contactMedium(List<ContactMediumMVO> contactMedium) {
    this.contactMedium = contactMedium;
    return this;
  }

  public PartyRoleMVO addContactMediumItem(ContactMediumMVO contactMediumItem) {
    if (this.contactMedium == null) {
      this.contactMedium = new ArrayList<>();
    }
    this.contactMedium.add(contactMediumItem);
    return this;
  }

  /**
   * Collection of contact mediums
   * @return contactMedium
  */
  @Valid 
  @Schema(name = "contactMedium", description = "Collection of contact mediums", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("contactMedium")
  public List<ContactMediumMVO> getContactMedium() {
    return contactMedium;
  }

  public void setContactMedium(List<ContactMediumMVO> contactMedium) {
    this.contactMedium = contactMedium;
  }

  public PartyRoleMVO paymentMethod(List<@Valid PaymentMethodRefMVO> paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  public PartyRoleMVO addPaymentMethodItem(PaymentMethodRefMVO paymentMethodItem) {
    if (this.paymentMethod == null) {
      this.paymentMethod = new ArrayList<>();
    }
    this.paymentMethod.add(paymentMethodItem);
    return this;
  }

  /**
   * Collection of payment methods
   * @return paymentMethod
  */
  @Valid 
  @Schema(name = "paymentMethod", description = "Collection of payment methods", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("paymentMethod")
  public List<@Valid PaymentMethodRefMVO> getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(List<@Valid PaymentMethodRefMVO> paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public PartyRoleMVO creditProfile(List<CreditProfileMVO> creditProfile) {
    this.creditProfile = creditProfile;
    return this;
  }

  public PartyRoleMVO addCreditProfileItem(CreditProfileMVO creditProfileItem) {
    if (this.creditProfile == null) {
      this.creditProfile = new ArrayList<>();
    }
    this.creditProfile.add(creditProfileItem);
    return this;
  }

  /**
   * Collection of credit profiles
   * @return creditProfile
  */
  @Valid 
  @Schema(name = "creditProfile", description = "Collection of credit profiles", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("creditProfile")
  public List<CreditProfileMVO> getCreditProfile() {
    return creditProfile;
  }

  public void setCreditProfile(List<CreditProfileMVO> creditProfile) {
    this.creditProfile = creditProfile;
  }

  public PartyRoleMVO relatedParty(List<RelatedPartyOrPartyRoleMVO> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public PartyRoleMVO addRelatedPartyItem(RelatedPartyOrPartyRoleMVO relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Collection of related parties
   * @return relatedParty
  */
  @Valid 
  @Schema(name = "relatedParty", description = "Collection of related parties", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("relatedParty")
  public List<RelatedPartyOrPartyRoleMVO> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedPartyOrPartyRoleMVO> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public PartyRoleMVO status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Used to track the lifecycle status of the party role.
   * @return status
  */
  
  @Schema(name = "status", description = "Used to track the lifecycle status of the party role.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public PartyRoleMVO statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection.
   * @return statusReason
  */
  
  @Schema(name = "statusReason", description = "A string providing an explanation on the value of the status lifecycle. For instance if the status is Rejected, statusReason will provide the reason for rejection.", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("statusReason")
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }

  public PartyRoleMVO validFor(TimePeriod validFor) {
    this.validFor = validFor;
    return this;
  }

  /**
   * Get validFor
   * @return validFor
  */
  @Valid 
  @Schema(name = "validFor", requiredMode = Schema.RequiredMode.NOT_REQUIRED)
  @JsonProperty("validFor")
  public TimePeriod getValidFor() {
    return validFor;
  }

  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartyRoleMVO partyRoleMVO = (PartyRoleMVO) o;
    return Objects.equals(this.atType, partyRoleMVO.atType) &&
        Objects.equals(this.atBaseType, partyRoleMVO.atBaseType) &&
        Objects.equals(this.atSchemaLocation, partyRoleMVO.atSchemaLocation) &&
        Objects.equals(this.href, partyRoleMVO.href) &&
        Objects.equals(this.id, partyRoleMVO.id) &&
        Objects.equals(this.name, partyRoleMVO.name) &&
        Objects.equals(this.description, partyRoleMVO.description) &&
        Objects.equals(this.role, partyRoleMVO.role) &&
        Objects.equals(this.engagedParty, partyRoleMVO.engagedParty) &&
        Objects.equals(this.partyRoleSpecification, partyRoleMVO.partyRoleSpecification) &&
        Objects.equals(this.characteristic, partyRoleMVO.characteristic) &&
        Objects.equals(this.account, partyRoleMVO.account) &&
        Objects.equals(this.agreement, partyRoleMVO.agreement) &&
        Objects.equals(this.contactMedium, partyRoleMVO.contactMedium) &&
        Objects.equals(this.paymentMethod, partyRoleMVO.paymentMethod) &&
        Objects.equals(this.creditProfile, partyRoleMVO.creditProfile) &&
        Objects.equals(this.relatedParty, partyRoleMVO.relatedParty) &&
        Objects.equals(this.status, partyRoleMVO.status) &&
        Objects.equals(this.statusReason, partyRoleMVO.statusReason) &&
        Objects.equals(this.validFor, partyRoleMVO.validFor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, atBaseType, atSchemaLocation, href, id, name, description, role, engagedParty, partyRoleSpecification, characteristic, account, agreement, contactMedium, paymentMethod, creditProfile, relatedParty, status, statusReason, validFor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartyRoleMVO {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    engagedParty: ").append(toIndentedString(engagedParty)).append("\n");
    sb.append("    partyRoleSpecification: ").append(toIndentedString(partyRoleSpecification)).append("\n");
    sb.append("    characteristic: ").append(toIndentedString(characteristic)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    agreement: ").append(toIndentedString(agreement)).append("\n");
    sb.append("    contactMedium: ").append(toIndentedString(contactMedium)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    creditProfile: ").append(toIndentedString(creditProfile)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

